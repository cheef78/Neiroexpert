class RailWay(): #Класс Железная дорога. Содержит в себе всю необходимую информацию для расчета повреждаемости и прогнозирования

    def __init__(self, Usl_ekspl, Plan, Profil, VSP, Zem_Pol, Klimat, Vagon, Poezd): #определеяем необходимые атрибуты класса - это план, профиль, верхнее строение пути, зем.полотно, климат, общие эксплуатационные характеристики, характеристики вагонопотока, поездопотока

        self.Usl_ekspl = Usl_ekspl #атрибут содержит в себе общие условия эксплуатации (грузонапряженность, установл.скорость, допуски по отказам, итп.)

        self.Plan = Plan #атрибут содержит в себе данные о плане линии (радиус, возвышение, длины элементов)

        self.Profil = Profil ##атрибут содержит в себе данные о плане линии (уклон элемента, длину элемента)

        self.VSP = VSP #атрибут содержит в себе данные о верхнем строении пути (тип конструкции (бесс/зв путь, тип рельсов, категория качества, тип скреплений, шпал, род балласта, толщину итп)

        self.Zem_Pol = Zem_Pol #атрибут содержит в себе данные о земляном полотне (наыпь, выемка, высота/глубина, тип грунта тела з.п. и основаниия, наличие защитных слоев, итп) 

        self.Klimat = Klimat #атрибут содержит в себе данные про климат участка (номер климатической зоны, итп) 

        self.Vagon = Vagon #атрибут содержит в себе данные по вагонопотоку (типы обращающегося подвижного состава, распределение долей типов в потоке, распределение скоростей в типе, характеристики инновационности, дефектоность итп) 

        self.Poezd = Poezd #атрибут содержит в себе данные по поездопотоку (типы поездов по массе/длине, распределение долей поездов в потоке, режимные особенности, такие как места постоянного разгона-замедления, проба тормозов, кратная тяга итп)


#функции вывода на экран параметров, характеризующих ж.д.
        
    def Usl_ekspl_info(self):
        print (str(self.Usl_ekspl) + "-это общие условия эксплуатации")

    def Plan_info(self):
        print (str(self.Plan) + "-это характеристики плана линии")

    def Profil_info(self):
        print (str(self.Profil) + "-это характеристики профиля линии")

    def VSP_info(self):
        print (str(self.VSP) + "-это характеристики В.С.П. линии")

    def Zem_Pol_info(self):
        print (str(self.Zem_Pol) + "-это характеристики зем.полотна линии") 

    def Klimat_info(self):
        print (str(self.Klimat) + "-это характеристики климата линии")

    def Vagon_info(self):
        print (str(self.Vagon) + "-это хаарктеристики вагонопотока линии")

    def Poezd_info(self):
        print (str(self.Poezd) + "-это характеристики поездопотока линии")

    def All_RailWay_info(self):
        print (str(self.Usl_ekspl) + "-это общие условия эксплуатации")
        print (str(self.Plan) + "-это характеристики плана линии")
        print (str(self.Profil) + "-это характеристики профиля линии")
        print (str(self.VSP) + "-это характеристики В.С.П. линии")
        print (str(self.Zem_Pol) + "-это характеристики зем.полотна линии") 
        print (str(self.Klimat) + "-это характеристики климата линии")
        print (str(self.Vagon) + "-это хаарктеристики вагонопотока линии")
        print (str(self.Poezd) + "-это характеристики поездопотока линии")
    
Railway1 = RailWay(1,2,3,4,5,6,7,8)

Railway1.Usl_ekspl_info()
Railway1.Plan_info()
Railway1.Profil_info()
Railway1.VSP_info()
Railway1.Zem_Pol_info()
Railway1.Klimat_info()
Railway1.Vagon_info
Railway1.Poezd_info()    
print()
Railway1.All_RailWay_info()

    
